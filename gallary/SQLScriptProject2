/*************************************************************
* Date		Programmer		Description						 *
*															 *
* 3/4/2022	KGreene			Initial creation of disk database*
*															 *
*************************************************************/

use master;
go
DROP DATABASE IF EXISTS disk_inventorykg;
go
CREATE DATABASE disk_inventorykg;
go
--Add server user
IF SUSER_ID('diskUserkg') IS NULL
	CREATE LOGIN diskUserkg
	WITH PASSWORD = 'Pa$$w0rd',
	DEFAULT_DATABASE = disk_inventorykg;
USE disk_inventorykg;
go
--Add DB user
CREATE USER diskUserkg;
ALTER ROLE db_datareader
	ADD MEMBER diskUserkg;
go
--Create Lookup Tables
CREATE TABLE disk_type (
	disk_type_id	INT	NOT NULL	PRIMARY KEY IDENTITY,
	descrip			VARCHAR(20) NOT NULL
	--type = CD, DVD, Vinyl, 8track, cassette
);
CREATE TABLE disk_status (
	status_id	INT NOT NULL	PRIMARY KEY IDENTITY,
	descrip		VARCHAR(20) NOT NULL
	--status = AVAILABLE, ONLOAD, DAMAGED, BROKEN 
);
CREATE TABLE disk_genre (
	genre_id	INT NOT NULL	PRIMARY KEY IDENTITY,
	descrip		VARCHAR(20) NOT NULL
	--genre = ROCK, METAL, RAP, COUNTRY, FOLK
 );
 CREATE TABLE borrower (
	borrower_id		INT NOT NULL	PRIMARY KEY IDENTITY,
	fname		NVARCHAR(60) NOT NULL,
	lname		NVARCHAR(60) NOT NULL,
	phone_num	VARCHAR(15) NOT NULL
 );
 CREATE TABLE disk_table (
	disk_id			INT NOT NULL	PRIMARY KEY IDENTITY,
	disk_name		NVARCHAR(100) NOT NULL,
	release_date	DATE NOT NULL,
	disk_type_id	INT NOT NULL	REFERENCES disk_type(disk_type_id),
	genre_id		INT NOT NULL	REFERENCES disk_genre(genre_id),
	status_id		INT NOT NULL	REFERENCES disk_status(status_id)
 );
 CREATE TABLE disk_has_borrower (
	disk_has_borrower_id		INT NOT NULL	PRIMARY KEY IDENTITY,
	disk_id						INT NOT NULL	REFERENCES disk_table(disk_id),
	borrower_id					INT NOT NULL	REFERENCES borrower(borrower_id),
	borrow_date					DATETIME2 NOT NULL,
	return_date					DATETIME2 NULL
 );
